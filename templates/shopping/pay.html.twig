{# templates/shopping/pay.html.twig #}
{% extends 'base.html.twig' %}

{% block title %}Complete Your Cosmic Purchase{% endblock %}

{% block body %}
<div class="min-h-screen bg-gradient-to-b from-gray-900 to-black text-white">
    <div class="container mx-auto px-4 py-8 pt-20">
        <h1 class="text-4xl font-bold mb-8 text-center text-transparent bg-clip-text bg-gradient-to-r from-purple-400 to-pink-600">
            Complete Your Cosmic Purchase
        </h1>

        <div class="max-w-md mx-auto bg-gray-800 p-6 rounded-lg shadow-md">
            <h2 class="text-2xl font-semibold mb-4 text-purple-300">Payment Information</h2>
            <form action="{{ path('process_payment') }}" method="post" class="space-y-4" id="payment-form">
                <div>
                    <label for="card_number" class="block text-sm font-medium text-gray-400 mb-2 flex items-center">
                        <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 10h18M7 15h1m4 0h1m-7 4h12a3 3 0 003-3V8a3 3 0 00-3-3H6a3 3 0 00-3 3v8a3 3 0 003 3z"/>
                        </svg>
                        Card Number
                        <span id="card-type-icon" class="ml-2"></span>
                    </label>
                    <input type="text" 
                           id="card_number" 
                           name="card_number" 
                           placeholder="1234 5678 9012 3456" 
                           class="w-full bg-gray-700 border-gray-600 text-white rounded-md shadow-sm focus:ring-2 focus:ring-purple-500 focus:border-purple-500 sm:text-sm py-2 px-3 transition-colors duration-200" 
                           maxlength="19"
                           required>
                    <p id="card-error" class="mt-1 text-sm text-red-500 hidden"></p>
                </div>
                <div class="grid grid-cols-2 gap-4">
                    <div>
                        <label for="expiry_date" class="block text-sm font-medium text-gray-400 mb-2 flex items-center">
                            <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"/>
                            </svg>
                            Expiry Date
                        </label>
                        <input type="text" 
                               id="expiry_date" 
                               name="expiry_date" 
                               placeholder="MM/YY" 
                               class="w-full bg-gray-700 border-gray-600 text-white rounded-md shadow-sm focus:ring-2 focus:ring-purple-500 focus:border-purple-500 sm:text-sm py-2 px-3" 
                               maxlength="5"
                               required>
                        <p id="expiry-error" class="mt-1 text-sm text-red-500 hidden"></p>
                    </div>
                    <div>
                        <label for="cvv" class="block text-sm font-medium text-gray-400 mb-2 flex items-center">
                            <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z"/>
                            </svg>
                            CVV
                        </label>
                        <input type="text" 
                               id="cvv" 
                               name="cvv" 
                               placeholder="123" 
                               class="w-full bg-gray-700 border-gray-600 text-white rounded-md shadow-sm focus:ring-2 focus:ring-purple-500 focus:border-purple-500 sm:text-sm py-2 px-3" 
                               maxlength="4"
                               required>
                        <p id="cvv-error" class="mt-1 text-sm text-red-500 hidden"></p>
                    </div>
                </div>
                <div class="border-t border-gray-700 pt-4 mt-4">
                    <div class="flex justify-between font-semibold text-lg text-purple-300">
                        <span>Total to Pay:</span>
                        <span>{{ total }} UEC</span>
                    </div>
                </div>
                <div class="flex justify-end">
                    <button type="submit" class="bg-gradient-to-r from-purple-600 to-pink-600 hover:from-purple-700 hover:to-pink-700 text-white font-bold py-2 px-4 rounded transition duration-300 ease-in-out transform hover:-translate-y-1 hover:scale-105">
                        Pay Now
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>
{% endblock %}

{% block javascripts %}
<script>
document.addEventListener('DOMContentLoaded', function() {
    const cardInput = document.getElementById('card_number');
    const expiryInput = document.getElementById('expiry_date');
    const cvvInput = document.getElementById('cvv');
    const form = document.getElementById('payment-form');

    cardInput.addEventListener('input', function(e) {
        let value = e.target.value.replace(/\D/g, '');
        let formattedValue = '';
        for (let i = 0; i < value.length; i++) {
            if (i > 0 && i % 4 === 0) {
                formattedValue += ' ';
            }
            formattedValue += value[i];
        }
        e.target.value = formattedValue;
        
        const cardError = document.getElementById('card-error');
        if (value.length > 0 && value.length < 16) {
            cardError.textContent = 'NumÃ©ro de carte invalide';
            cardError.classList.remove('hidden');
            e.target.classList.add('border-red-500');
        } else {
            cardError.classList.add('hidden');
            e.target.classList.remove('border-red-500');
        }
        
        const cardType = detectCardType(value);
        updateCardTypeIcon(cardType);
    });

    expiryInput.addEventListener('input', function(e) {
        let value = e.target.value.replace(/\D/g, '');
        if (value.length > 2) {
            value = value.substr(0, 2) + '/' + value.substr(2);
        }
        e.target.value = value;
        
        const expiryError = document.getElementById('expiry-error');
        const month = parseInt(value.substr(0, 2));
        if (month > 12 || month === 0) {
            expiryError.textContent = 'Mois invalide';
            expiryError.classList.remove('hidden');
            e.target.classList.add('border-red-500');
        } else {
            expiryError.classList.add('hidden');
            e.target.classList.remove('border-red-500');
        }
    });

    cvvInput.addEventListener('input', function(e) {
    e.target.value = e.target.value.replace(/\D/g, '').slice(0, 3);
    const cvvError = document.getElementById('cvv-error');
    if (e.target.value.length > 0 && e.target.value.length < 3) {
        cvvError.textContent = 'CVV invalide';
        cvvError.classList.remove('hidden');
        e.target.classList.add('border-red-500');
    } else {
        cvvError.classList.add('hidden');
        e.target.classList.remove('border-red-500');
    }
});

    function detectCardType(number) {
        const patterns = {
            visa: /^4/,
            mastercard: /^5[1-5]/,
            amex: /^3[47]/,
            discover: /^6/
        };
        
        for (let card in patterns) {
            if (patterns[card].test(number)) {
                return card;
            }
        }
        return 'unknown';
    }

    function updateCardTypeIcon(type) {
        const iconElement = document.getElementById('card-type-icon');
        iconElement.textContent = type.charAt(0).toUpperCase() + type.slice(1);
    }
});
</script>
{% endblock %}